<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAgregarProducto.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAAFtAAABbQAWXGuaIAAAAHdElNRQfoBgIBByP/boPmAAAA
        GXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAAbJJREFUOE+l1L0rhWEYx/ETi0hKIaNQ
        yCQvSUgyyKKURTGwkcU/IJMszAw2MihKJovNpryUiUneUiQvSfh+6zx1bud4nJxffcp53Ody3899XRJ/
        pBDD2MY1PvCOC6yiB/nIKrVYwwu+YLFHPCU/6w7zKEVs6nEAv3SPZQyiDZ0YxSbe4Jp1/Fq0BDtw4Ql6
        UYUpuGOPv4g+jOMWrnWnGY8/gU9cogO+p+Pksyuc4xUbyINF3anHd22QIuzBvziLRljgBtOoRiU8eh1M
        Abbgd7yoIC7yNh/QhAV4GSOIyxgs6O0H6YLbP0M5BjADdxGXdnj7tlSQbljwFGU+yDItsKU8TZAGeGvy
        52wzBIv5uoIUYx++D9skm3jTK/A7tlRaJuEvbZUaH/wR+9Hmd6Ic07T0IxqvXcQVdWpsftfa9M5+kFa4
        MxdE/OzxfadeVAWaMQeb3zWOqbMfxGLRX4uk/iPworx9W8o+9ZnT45g6+0EyFXNnHt936kVZ0JaSt+lE
        OabOfhDn9QipxSzueEXx9j2yfWrzO1GOacYc4mcxd/zvPCMq5k5zKmaWYFF36vFzSCLxDWmmh6BG2IIn
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnRegistrarFactura.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnsalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAdcAAAHXAYySCGgAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEEklEQVR4Xu2YS2gTURSGSwVxoaLuRFTSpgiWihSbSdOm74I7NwoFd65EUOsDRFTwsdBqG/syTdLS
        IkXEgCSxIgguFMVtF2IVRKEIgghqrWitj99z64mk6U0yk5lJO5N88BPI3Hvmnj8z556bogIFChTIJaUx
        tDmjeFEaxURZFAp/bX+2xLCKkr5Own/F8JAv2xtHBC5K+NW85P8Z8JqH2JSzKC6J4TAlO7sgebsbUDKG
        TSVRPJImHpddDaAit5sS/Lgg4WTZzYC5QhdDUJqsTHYyIGWhSydbGJCp0KWT1Q1QVejSycoGqC506WRF
        AzQXunSymgHOO3CLRUuTyU4zpAfCUGcMRx1ReMvDWMm3W0KEsaw0gjO02J8JizdLP8mQx/R5iupLBa9g
        8XDcxmZekGyxpotMGC+JoH3TXazlJeUOSryNFvE5eVGLpGkyw0efG3l55mFooTNeot/ocd7Dal6usZhQ
        6MzSO/GE8rINgAodPWInKLD2jm5xFdZdHxa70OkV/XBvst4xaGILBVkqhU6PphwxtHJa6qGJk0mBrKxZ
        Opjt5dTU0diF2dZLgF3UQnINoIPTy4wrhP3NV/BbFsyqaukAlEG0c4qZqRzEtrpufJAFs6qaL+MPmaCh
        JgDFbj9GaaI0oBXV0IXvFX6NWyS5tktMlAW0ojzXMM6pqad8COs8fXgmC2hFuQM4yqlpQwngZFOn9Qsk
        7XQzDSNYwWlpQxnGVm833ssCW0nVAdzilLKACqTiR0RsL7LgVhBt9X+qhnUepV1B7Gn0YUZ2g2wkmpZc
        murxY4xTyR4jC6ToQkVM7yjW76A92x3CQXrSbtb04Xl9N760GmxOUxd+ZV0LkqHKekFvBxk3IBXVA9hQ
        HcRFTz8mmugRlsXQKmUAPRxeP3o7yEwGJLJ9BGtoV+qn+03JYqmVmM8hDUJHgdRiQCJKCMf1GOEOopJD
        GUc2HWS2BsQRr6F4r2Wx04m2xDCHMBatBVKvAQLXIBzeXryVxU8leno+8XRzUFsgjTAgjngNZfeQShyX
        AyjjqeagpoM00gAB9Sln1Z5mlSDO8zQTyVAgjTZAUBXAgRYVW2aNH094ivmkKpBmGCCgX/dYpl2prgcf
        eXhukBVIMxdBdWg48V7JEmeD8jCW8/DcQcXnXMNVfKVWd1qcLfhrU6jpx0tZ8nHR67KTh9oT8dTRq5fy
        X296Sk7zUPtCXd8hWfJCbj9u8DB7U9uHSZkBdMh6ykPsTVUI9TIDansxyUPsj6xdNv5kuIRxD+FIsgH1
        Pnzjy/lBg29+M0aN2A++lB94/LifaEBTJ37xpfxACWHfPAOoG+RL+YH4Q1S0wHEDxHmBL+UP3h68ixsg
        /rPgr/OHuZMpFUORPHWJnfx1gQIF8pKior/lNvIjrHRbngAAAABJRU5ErkJggg==
</value>
  </data>
</root>